// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package seleniummodule.actions;

import java.io.File;
import java.net.URL;
import java.time.Duration;
import java.util.ArrayList;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import mercedespoc.proxies.COO_AFABDetail;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class SubmitIHKDraft extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __Parameter;
	private mercedespoc.proxies.COO_IHKdetail Parameter;
	private IMendixObject __Credentials;
	private mercedespoc.proxies.Credentials Credentials;

	public SubmitIHKDraft(IContext context, IMendixObject Parameter, IMendixObject Credentials)
	{
		super(context);
		this.__Parameter = Parameter;
		this.__Credentials = Credentials;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.Parameter = this.__Parameter == null ? null : mercedespoc.proxies.COO_IHKdetail.initialize(getContext(), __Parameter);

		this.Credentials = this.__Credentials == null ? null : mercedespoc.proxies.Credentials.initialize(getContext(), __Credentials);

		// BEGIN USER CODE
		ILogNode logger = Core.getLogger("SeleniumIHKScript");
		
		/* -------------------------------------------------       LOCAL  CONFIGURATION ------------------------------------------------------------------------------------------*/ 
		// // Selenium
		// //Driver Resource Path
		//String driverFilePath = (Core.getConfiguration().getResourcesPath() + 
		//		File.separator + "chromedriver/chromedriver");
		//if(System.getProperty("os.name").toLowerCase().contains("win"))
		//	driverFilePath+=".exe";
		//System.setProperty("webdriver.chrome.driver", driverFilePath);
		//
		// //Chrome Resource Path
		//String chromeFilePath = (Core.getConfiguration().getResourcesPath() + 
		//		File.separator + "Chrome/Application/chrome.exe");
		//
		// //Set Opts
		//ChromeOptions opt = new ChromeOptions();
		// //opt.addArguments("headless");
		//opt.setBinary(chromeFilePath);
		//
		// //Driver
		//ChromeDriver driver = new ChromeDriver(opt);
		/* -------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ 

		/* ------------------------------------     DOCKER CONTAINER  CONFIGURATION ------------------------------------------------------------------------------------------*/ 
		 // Selenium
		 //Set Opts
		ChromeOptions opt = new ChromeOptions();
		 URL url = new URL("http://chrome:4444/wd/hub");
		//Driver
		 WebDriver driver = new RemoteWebDriver(url, opt);
		/* -------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ 

	try {
			//Get Page
			driver.get("https://euzv2.gfi.ihk.de/euzv2-ui-service/welcome");
			
			//WaitDefault
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
			//waitSmall
			WebDriverWait waitSmall = new WebDriverWait(driver, Duration.ofSeconds(5));


			//Click Login Btn
			WebElement startloginBtn = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".mat-focus-indicator.mat-raised-button.mat-button-base.mat-primary.lux-button.lux-bold.lux-align-center.ng-star-inserted")));
			startloginBtn.click();
	
			//Input Username
			WebElement userName = wait.until(ExpectedConditions.elementToBeClickable((By.id("username"))));
			userName.sendKeys(this.Credentials.getUsernameIHK());
			//Input Password
			WebElement password = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("password")));
			password.sendKeys(this.Credentials.getPasswordIHK());
			
			//Sign in
			WebElement signInBtn =  wait.until(ExpectedConditions.elementToBeClickable(By.id("kc-login")));
			signInBtn.click();
			
			// Check if alerts, if so close it
			try {
		    while(waitSmall.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".cdk-overlay-backdrop-showing")))!=null)
			    {
			    	WebElement popupBtn =  waitSmall.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".mat-dialog-container .mat-dialog-actions button")));
			    	popupBtn.click();
			    }
			}
			catch(Exception e){
				//continue
			}
		    //Boolean isLoadingTab = wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(".cdk-overlay-backdrop-showing")));
			//Go to COO Area
			WebElement cooAreaBtn =  wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".home-component.lux-pt-3 lux-tile:first-child")));
			cooAreaBtn.click();

			//vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvINPUTSvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv//
		
			//Absender
			if(this.Parameter.getConsignor()  != null ){
				WebElement absenderInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("absender")));
				absenderInput.sendKeys(this.Parameter.getConsignor());
			}
			//empfaenger
			if(this.Parameter.getConsignee()  != null ){
			WebElement empfaengerInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("empfaenger")));
			empfaengerInput.sendKeys(this.Parameter.getConsignee());
			}
			//Empfangsland 
			if(this.Parameter.getReceivingCountry()  != null ){
				WebElement landInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("land")));
				landInput.sendKeys(this.Parameter.getReceivingCountry());
			}
			//ursprungsland
			if(this.Parameter.getOriginCountry()  != null ){
				WebElement ursprungslandInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("ursprungsland")));
				ursprungslandInput.sendKeys(this.Parameter.getOriginCountry());
			}
			//befoerderungsAngaben 
			if(this.Parameter.getMeansOfTransport()  != null ){
				WebElement befoerderungsAngabenInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("befoerderungsAngaben")));
				befoerderungsAngabenInput.sendKeys(this.Parameter.getMeansOfTransport());
			}
			//waren 
			if(this.Parameter.getAFABGeographyFields()  != null ){
				WebElement warenInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("waren")));
				warenInput.sendKeys(this.Parameter.getAFABGeographyFields());
			}
			//mengen 
			if(this.Parameter.getQuantity()  != null ){
				WebElement mengenInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("mengen")));
				mengenInput.sendKeys(this.Parameter.getQuantity());
			}
			
			//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^INPUTS^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^//

			//SAVE AS DRAFT
			WebElement saveDraftBtn =  wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("section euz-window .toolbar euz-action-bar lux-button")));
			saveDraftBtn.click();
			
			
			IMendixObject seleniumOutput = Core.instantiate(context(), seleniummodule.proxies.SeleniumOutput.getType());
			seleniumOutput.setValue(getContext(), seleniummodule.proxies.SeleniumOutput.MemberNames.OutputURL.toString() , driver.getCurrentUrl());
			driver.quit();
			return seleniumOutput;
			
		} catch (Exception e) {
			IMendixObject seleniumOutput = Core.instantiate(context(), seleniummodule.proxies.SeleniumOutput.getType());
			seleniumOutput.setValue(getContext(), seleniummodule.proxies.SeleniumOutput.MemberNames.ErrorMessage.toString(), "There was an error fetching data from IHK." + e.getMessage());
			seleniumOutput.setValue(getContext(), seleniummodule.proxies.SeleniumOutput.MemberNames.HasError.toString(), true);
			driver.quit();
			return seleniumOutput;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SubmitIHKDraft";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
