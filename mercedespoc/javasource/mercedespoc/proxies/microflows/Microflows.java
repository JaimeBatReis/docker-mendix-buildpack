// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mercedespoc.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the MercedesPOC module
	public static void aCT_AFABcredentials(IContext context, mercedespoc.proxies.Credentials _credentials)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Credentials", _credentials == null ? null : _credentials.getMendixObject());
		Core.microflowCall("MercedesPOC.ACT_AFABcredentials").withParams(params).execute(context);
	}
	public static void aCT_GoBackToIHK(IContext context, mercedespoc.proxies.Credentials _credentials)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Credentials", _credentials == null ? null : _credentials.getMendixObject());
		Core.microflowCall("MercedesPOC.ACT_GoBackToIHK").withParams(params).execute(context);
	}
	public static void aCT_IHKcredentials(IContext context, mercedespoc.proxies.Credentials _credentials)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Credentials", _credentials == null ? null : _credentials.getMendixObject());
		Core.microflowCall("MercedesPOC.ACT_IHKcredentials").withParams(params).execute(context);
	}
	public static void aCT_SaveGeography(IContext context, mercedespoc.proxies.Geography _geography)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Geography", _geography == null ? null : _geography.getMendixObject());
		Core.microflowCall("MercedesPOC.ACT_SaveGeography").withParams(params).execute(context);
	}
	public static void aCT_ShowDashboard(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MercedesPOC.ACT_ShowDashboard").withParams(params).execute(context);
	}
	public static void aCT_ShowGeographyConfigPage(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MercedesPOC.ACT_ShowGeographyConfigPage").withParams(params).execute(context);
	}
	public static void aCT_SubmitIHK(IContext context, mercedespoc.proxies.COO_IHKdetail _cOO_IHKdetail, mercedespoc.proxies.COO _cOO)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("COO_IHKdetail", _cOO_IHKdetail == null ? null : _cOO_IHKdetail.getMendixObject());
		params.put("COO", _cOO == null ? null : _cOO.getMendixObject());
		Core.microflowCall("MercedesPOC.ACT_SubmitIHK").withParams(params).execute(context);
	}
	public static boolean aCT_SubmitIHKAsDraft(IContext context, mercedespoc.proxies.COO _cOO)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("COO", _cOO == null ? null : _cOO.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MercedesPOC.ACT_SubmitIHKAsDraft").withParams(params).execute(context);
	}
	public static void aSU_BootstrapFields(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MercedesPOC.ASU_BootstrapFields").withParams(params).execute(context);
	}
	public static void aSU_BootstrapGeography(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MercedesPOC.ASU_BootstrapGeography").withParams(params).execute(context);
	}
	public static boolean aSU_OnStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("MercedesPOC.ASU_OnStartup").withParams(params).execute(context);
	}
	public static java.util.List<mercedespoc.proxies.ColumnChart> dB_Retrieve_ColumnChart_Values(IContext context, mercedespoc.proxies.Counters _counters)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Counters", _counters == null ? null : _counters.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DB_Retrieve_ColumnChart_Values").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.ColumnChart.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static java.util.List<mercedespoc.proxies.PieChart> dB_Retrieve_PieChart_Values(IContext context, mercedespoc.proxies.Counters _counters)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Counters", _counters == null ? null : _counters.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DB_Retrieve_PieChart_Values").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.PieChart.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void dS_Coo_Filtred(IContext context, mercedespoc.proxies.GeographyFilter _geographyFilter)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("GeographyFilter", _geographyFilter == null ? null : _geographyFilter.getMendixObject());
		Core.microflowCall("MercedesPOC.DS_Coo_Filtred").withParams(params).execute(context);
	}
	public static java.util.List<mercedespoc.proxies.COO_AFABDetail> dS_COODetail_AFABFields(IContext context, mercedespoc.proxies.COO _cOO)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("COO", _cOO == null ? null : _cOO.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DS_COODetail_AFABFields").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.COO_AFABDetail.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static java.util.List<mercedespoc.proxies.COO> dS_COOList(IContext context, mercedespoc.proxies.GeographyFilter _geographyFilter)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("GeographyFilter", _geographyFilter == null ? null : _geographyFilter.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DS_COOList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.COO.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static mercedespoc.proxies.Counters dS_CountProcess(IContext context, mercedespoc.proxies.Dashboard _dashboard)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Dashboard", _dashboard == null ? null : _dashboard.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_CountProcess").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.Counters.initialize(context, result);
	}
	public static mercedespoc.proxies.CountryOfOrigin dS_CountryOfOriginByCOO(IContext context, mercedespoc.proxies.COO _cOO)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("COO", _cOO == null ? null : _cOO.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_CountryOfOriginByCOO").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.CountryOfOrigin.initialize(context, result);
	}
	public static void dS_CreateFields(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MercedesPOC.DS_CreateFields").withParams(params).execute(context);
	}
	public static mercedespoc.proxies.Credentials dS_CredentialsGet(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_CredentialsGet").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.Credentials.initialize(context, result);
	}
	public static java.util.List<mercedespoc.proxies.COO> dS_Dashboard_PendingProcessList(IContext context, mercedespoc.proxies.Dashboard _dashboard)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Dashboard", _dashboard == null ? null : _dashboard.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DS_Dashboard_PendingProcessList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.COO.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static mercedespoc.proxies.Dashboard dS_DashboardGet(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_DashboardGet").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.Dashboard.initialize(context, result);
	}
	public static importmodule.proxies.ImportCOOHelper dS_Files(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_Files").withParams(params).execute(context);
		return result == null ? null : importmodule.proxies.ImportCOOHelper.initialize(context, result);
	}
	public static java.util.List<mercedespoc.proxies.Geography> dS_Geography(IContext context, mercedespoc.proxies.AFABFields _aFABFields)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AFABFields", _aFABFields == null ? null : _aFABFields.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DS_Geography").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.Geography.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static mercedespoc.proxies.GeographyFilter dS_GeographyFilter(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_GeographyFilter").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.GeographyFilter.initialize(context, result);
	}
	public static java.util.List<mercedespoc.proxies.DatafieldsTable> dS_GetEntries(IContext context, mercedespoc.proxies.helper _datafieldsTable)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DatafieldsTable", _datafieldsTable == null ? null : _datafieldsTable.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DS_GetEntries").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.DatafieldsTable.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static mercedespoc.proxies.COO_IHKdetail dS_IHKFields(IContext context, mercedespoc.proxies.COO _cOO)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("COO", _cOO == null ? null : _cOO.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.DS_IHKFields").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.COO_IHKdetail.initialize(context, result);
	}
	public static java.util.List<mercedespoc.proxies.AFABFields> dS_RetrieveColumn(IContext context, mercedespoc.proxies.AFABFields _aFABFields)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AFABFields", _aFABFields == null ? null : _aFABFields.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MercedesPOC.DS_RetrieveColumn").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mercedespoc.proxies.AFABFields.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void oCH_DashDates(IContext context, mercedespoc.proxies.Dashboard _dashboard)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Dashboard", _dashboard == null ? null : _dashboard.getMendixObject());
		Core.microflowCall("MercedesPOC.OCH_DashDates").withParams(params).execute(context);
	}
	public static void oCH_DefaultField(IContext context, mercedespoc.proxies.AFABFields _aFABFields)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AFABFields", _aFABFields == null ? null : _aFABFields.getMendixObject());
		Core.microflowCall("MercedesPOC.OCH_DefaultField").withParams(params).execute(context);
	}
	public static void oCH_ValueEntry(IContext context, mercedespoc.proxies.DatafieldsTable _datafieldsTable)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DatafieldsTable", _datafieldsTable == null ? null : _datafieldsTable.getMendixObject());
		Core.microflowCall("MercedesPOC.OCH_ValueEntry").withParams(params).execute(context);
	}
	public static mercedespoc.proxies.COO_IHKdetail sUB_MapAFABToIHK(IContext context, java.util.List<mercedespoc.proxies.COO_AFABDetail> _cOO_AFABDetailList, mercedespoc.proxies.COO_IHKdetail _cOO_IHKdetail)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_cOO_AFABDetailList = null;
		if (_cOO_AFABDetailList != null)
		{
			listparam_cOO_AFABDetailList = new java.util.ArrayList<>();
			for (var obj : _cOO_AFABDetailList) {
				listparam_cOO_AFABDetailList.add(obj.getMendixObject());
			}
		}
		params.put("COO_AFABDetailList", listparam_cOO_AFABDetailList);

		params.put("COO_IHKdetail", _cOO_IHKdetail == null ? null : _cOO_IHKdetail.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("MercedesPOC.SUB_MapAFABToIHK").withParams(params).execute(context);
		return result == null ? null : mercedespoc.proxies.COO_IHKdetail.initialize(context, result);
	}
	public static boolean sUB_StartProcess_ImportFromAFAB(IContext context, mercedespoc.proxies.COO _cOO)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("COO", _cOO == null ? null : _cOO.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MercedesPOC.SUB_StartProcess_ImportFromAFAB").withParams(params).execute(context);
	}
}
