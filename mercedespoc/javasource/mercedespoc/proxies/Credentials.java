// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mercedespoc.proxies;

public class Credentials
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject credentialsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MercedesPOC.Credentials";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UsernameIHK("UsernameIHK"),
		PasswordIHK("PasswordIHK"),
		hasIHKcredentials("hasIHKcredentials"),
		UsernameAFAB("UsernameAFAB"),
		PasswordAFAB("PasswordAFAB"),
		hasAFABcredentials("hasAFABcredentials"),
		Credentials_User("MercedesPOC.Credentials_User");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Credentials(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Credentials(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject credentialsMendixObject)
	{
		if (credentialsMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, credentialsMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.credentialsMendixObject = credentialsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Credentials.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static mercedespoc.proxies.Credentials initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mercedespoc.proxies.Credentials.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static mercedespoc.proxies.Credentials initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mercedespoc.proxies.Credentials(context, mendixObject);
	}

	public static mercedespoc.proxies.Credentials load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mercedespoc.proxies.Credentials.initialize(context, mendixObject);
	}

	public static java.util.List<mercedespoc.proxies.Credentials> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> mercedespoc.proxies.Credentials.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UsernameIHK
	 */
	public final java.lang.String getUsernameIHK()
	{
		return getUsernameIHK(getContext());
	}

	/**
	 * @param context
	 * @return value of UsernameIHK
	 */
	public final java.lang.String getUsernameIHK(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.UsernameIHK.toString());
	}

	/**
	 * Set value of UsernameIHK
	 * @param usernameihk
	 */
	public final void setUsernameIHK(java.lang.String usernameihk)
	{
		setUsernameIHK(getContext(), usernameihk);
	}

	/**
	 * Set value of UsernameIHK
	 * @param context
	 * @param usernameihk
	 */
	public final void setUsernameIHK(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String usernameihk)
	{
		getMendixObject().setValue(context, MemberNames.UsernameIHK.toString(), usernameihk);
	}

	/**
	 * @return value of PasswordIHK
	 */
	public final java.lang.String getPasswordIHK()
	{
		return getPasswordIHK(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordIHK
	 */
	public final java.lang.String getPasswordIHK(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PasswordIHK.toString());
	}

	/**
	 * Set value of PasswordIHK
	 * @param passwordihk
	 */
	public final void setPasswordIHK(java.lang.String passwordihk)
	{
		setPasswordIHK(getContext(), passwordihk);
	}

	/**
	 * Set value of PasswordIHK
	 * @param context
	 * @param passwordihk
	 */
	public final void setPasswordIHK(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String passwordihk)
	{
		getMendixObject().setValue(context, MemberNames.PasswordIHK.toString(), passwordihk);
	}

	/**
	 * @return value of hasIHKcredentials
	 */
	public final java.lang.Boolean gethasIHKcredentials()
	{
		return gethasIHKcredentials(getContext());
	}

	/**
	 * @param context
	 * @return value of hasIHKcredentials
	 */
	public final java.lang.Boolean gethasIHKcredentials(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.hasIHKcredentials.toString());
	}

	/**
	 * Set value of hasIHKcredentials
	 * @param hasihkcredentials
	 */
	public final void sethasIHKcredentials(java.lang.Boolean hasihkcredentials)
	{
		sethasIHKcredentials(getContext(), hasihkcredentials);
	}

	/**
	 * Set value of hasIHKcredentials
	 * @param context
	 * @param hasihkcredentials
	 */
	public final void sethasIHKcredentials(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean hasihkcredentials)
	{
		getMendixObject().setValue(context, MemberNames.hasIHKcredentials.toString(), hasihkcredentials);
	}

	/**
	 * @return value of UsernameAFAB
	 */
	public final java.lang.String getUsernameAFAB()
	{
		return getUsernameAFAB(getContext());
	}

	/**
	 * @param context
	 * @return value of UsernameAFAB
	 */
	public final java.lang.String getUsernameAFAB(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.UsernameAFAB.toString());
	}

	/**
	 * Set value of UsernameAFAB
	 * @param usernameafab
	 */
	public final void setUsernameAFAB(java.lang.String usernameafab)
	{
		setUsernameAFAB(getContext(), usernameafab);
	}

	/**
	 * Set value of UsernameAFAB
	 * @param context
	 * @param usernameafab
	 */
	public final void setUsernameAFAB(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String usernameafab)
	{
		getMendixObject().setValue(context, MemberNames.UsernameAFAB.toString(), usernameafab);
	}

	/**
	 * @return value of PasswordAFAB
	 */
	public final java.lang.String getPasswordAFAB()
	{
		return getPasswordAFAB(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordAFAB
	 */
	public final java.lang.String getPasswordAFAB(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PasswordAFAB.toString());
	}

	/**
	 * Set value of PasswordAFAB
	 * @param passwordafab
	 */
	public final void setPasswordAFAB(java.lang.String passwordafab)
	{
		setPasswordAFAB(getContext(), passwordafab);
	}

	/**
	 * Set value of PasswordAFAB
	 * @param context
	 * @param passwordafab
	 */
	public final void setPasswordAFAB(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String passwordafab)
	{
		getMendixObject().setValue(context, MemberNames.PasswordAFAB.toString(), passwordafab);
	}

	/**
	 * @return value of hasAFABcredentials
	 */
	public final java.lang.Boolean gethasAFABcredentials()
	{
		return gethasAFABcredentials(getContext());
	}

	/**
	 * @param context
	 * @return value of hasAFABcredentials
	 */
	public final java.lang.Boolean gethasAFABcredentials(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.hasAFABcredentials.toString());
	}

	/**
	 * Set value of hasAFABcredentials
	 * @param hasafabcredentials
	 */
	public final void sethasAFABcredentials(java.lang.Boolean hasafabcredentials)
	{
		sethasAFABcredentials(getContext(), hasafabcredentials);
	}

	/**
	 * Set value of hasAFABcredentials
	 * @param context
	 * @param hasafabcredentials
	 */
	public final void sethasAFABcredentials(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean hasafabcredentials)
	{
		getMendixObject().setValue(context, MemberNames.hasAFABcredentials.toString(), hasafabcredentials);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Credentials_User
	 */
	public final system.proxies.User getCredentials_User() throws com.mendix.core.CoreException
	{
		return getCredentials_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Credentials_User
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.User getCredentials_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Credentials_User.toString());
		if (identifier != null) {
			result = system.proxies.User.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Credentials_User
	 * @param credentials_user
	 */
	public final void setCredentials_User(system.proxies.User credentials_user)
	{
		setCredentials_User(getContext(), credentials_user);
	}

	/**
	 * Set value of Credentials_User
	 * @param context
	 * @param credentials_user
	 */
	public final void setCredentials_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User credentials_user)
	{
		if (credentials_user == null) {
			getMendixObject().setValue(context, MemberNames.Credentials_User.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Credentials_User.toString(), credentials_user.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return credentialsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mercedespoc.proxies.Credentials that = (mercedespoc.proxies.Credentials) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
